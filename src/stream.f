C
C***********************************************************************
C                                                                      *
C            NACHOS II - A Finite Element Computer Program             *
C                        for Incompressible Flow Problems              *
C                                                                      *
C     Copyright (c) 1986,2019   National Technology & Engineering      *
C                               Solutions of Sandia, LLC (NTESS)       *
C                                                                      *
C                            All rights reserved.                      *
C                                                                      *
C     This software is distributed under the BSD 3-Clause License.     *
C                                                                      *
C***********************************************************************
C
      SUBROUTINE STREAM (XS,YS,ICON,LISTEL,LISTND,UN,PSIVEC)
C
C     ******************************************************************
C
C     PROGRAM TO CALCULATE THE STREAM FUNCTION FIELD FROM A KNOWN
C     VELOCITY FIELD VIA INTEGRATION ALONG ELEMENT EDGES
C
C     ******************************************************************
C
      CHARACTER*10 CDATA,PRNTR
C
      COMMON /INDATR/ RDATA(150)
      COMMON /INDATI/ IDATA(150)
      COMMON /INDATC/ CDATA(150)
      COMMON /TAPES/  NIN,NOUT,NTP0,NTP1,NTP2,NTP3,NTP4,NTP5,NTP6,NTP7, 
     1                NTP8,NTP9,NTP10,NTP11,NTP12,NTP13
      COMMON /SZDAT/  NUMEL,NUMNOD,NMVAR,NUMDOF,NODSOL
      COMMON /PRBDAT/ IAXSYM,ITMDEP,IFORCE,IFREE,IVAR1,IVAR2,IPFUNC,    
     1                IPNLTY,PNLTY
      COMMON /ELMDAT/ NNELM(6),NNCOR(6),NNMID(6),NNCTR(6),NSIDET(5),    
     1                NSIDEQ(7),NNSIDE(6,4,3)
      COMMON /GAUSS2/ GSPT3(3),GSWT3(3)
C
      DIMENSION ICON(NUMEL,*), LISTEL(*), LISTND(*), XS(*), YS(*)
      DIMENSION UN(NUMNOD,*), PSIVEC(*)
      DIMENSION U(9), V(9), X(9), Y(9)
      DIMENSION DELPSI(4), PSI(4)
      DIMENSION FACT1(3,3), FACT2(2)
      DIMENSION DSX(3), DSY(3)
C
      DATA ((FACT1(I,J),I=1,3),J=1,3)/-.5,.666667,-.166667,-.666667,    
     1     0.,.666667,.166667,-.666667,.5/
      DATA (FACT2(I),I=1,2)/.333333,1.333333/
      DATA NGAUSS/3/
C
C     STATEMENT FUNCTION
C
      FS(I,S)=(S**2-S)*.25*(I-2)*(I-3)-(1.-S**2)*(I-1)*(I-3)+(S**2+S)*  
     1.25*(I-1)*(I-2)
C
C     ******************************************************************
C
C     READ CONTROL DATA
C
      WRITE (NOUT, 420)
      PSIBAS=RDATA(2)
      PRNTR=CDATA(3)
      IF (PRNTR.EQ.' ') PRNTR='SUMMARY'
      NINC=IDATA(4)
      IF (NINC.EQ.0) NINC=10000
      IF (ITMDEP.EQ.0) NINC=1
      WRITE (NOUT, 430) PSIBAS,NINC
      IF (PRNTR.EQ.'PRINT') WRITE (NOUT, 370)
      IF (PRNTR.EQ.'SUMMARY') WRITE (NOUT, 380)
      IF (PRNTR.EQ.'NOPRINT') WRITE (NOUT, 390)
C
C     SET POINTERS
C
      KINC=0
   10 CONTINUE
      KINC=KINC+1
      KOUNT=0
      KADD=1
      PSIMAX=0.
      PSIMIN=0.
      RESID=0.
C
C     READ SOLUTION FIELD
C
      READ (NTP9, END=350) TIME,NUMNOD,NUMVAR,((UN(I,J),I=1,NUMNOD),    
     1J=1,NUMVAR)
C
C     LOOP ON ELEMENTS, CREATING NICNAMES AND CALCULATING DELTA PSI
C
      DO 20 I=1,NUMNOD
      PSIVEC(I)=0.
      LISTND(I)=0
   20 CONTINUE
      DO 310 N=1,NUMEL
      NN=ABS(LISTEL(N))
      KIND=MOD(NN,100)
      NN=NNELM(KIND)
      DO 30 J=1,NN
      INODE=ICON(N,J)
      U(J)=UN(INODE,1)
      V(J)=UN(INODE,2)
      X(J)=XS(INODE)
      Y(J)=YS(INODE)
   30 CONTINUE
      NPSI=NNCOR(KIND)
      NPSIM=NPSI-1
      IF (IAXSYM.EQ.1) GO TO 80
C
C     PLANAR GEOMETRY
C
      GO TO (40, 60, 40, 60, 40, 60), KIND
   40 CONTINUE
C
C     SUBPARAMETRIC ELEMENTS
C
      DO 50 I=1,NPSI
      I1=I
      I2=I+1
      I3=I+NPSI
      IF (I.EQ.NPSI) I2=1
      XDIFF=(X(I2)-X(I1))/2.
      YDIFF=(Y(I2)-Y(I1))/2.
      DELPSI(I)=(FACT2(1)*U(I1)+FACT2(2)*U(I3)+FACT2(1)*U(I2))*YDIFF-   
     1(FACT2(1)*V(I1)+FACT2(2)*V(I3)+FACT2(1)*V(I2))*XDIFF
   50 CONTINUE
      GO TO 150
   60 CONTINUE
C
C     ISOPARAMETRIC ELEMENTS
C
      DO 70 I=1,NPSI
      I1=I
      I2=I+1
      I3=I+NPSI
      IF (I.EQ.NPSI) I2=1
      WX1=X(I1)*FACT1(1,1)+X(I3)*FACT1(2,1)+X(I2)*FACT1(3,1)
      WX2=X(I1)*FACT1(1,2)+X(I3)*FACT1(2,2)+X(I2)*FACT1(3,2)
      WX3=X(I1)*FACT1(1,3)+X(I3)*FACT1(2,3)+X(I2)*FACT1(3,3)
      WY1=Y(I1)*FACT1(1,1)+Y(I3)*FACT1(2,1)+Y(I2)*FACT1(3,1)
      WY2=Y(I1)*FACT1(1,2)+Y(I3)*FACT1(2,2)+Y(I2)*FACT1(3,2)
      WY3=Y(I1)*FACT1(1,3)+Y(I3)*FACT1(2,3)+Y(I2)*FACT1(3,3)
      DELPSI(I)=WY1*U(I1)+WY2*U(I3)+WY3*U(I2)-WX1*V(I1)-WX2*V(I3)-      
     1WX3*V(I2)
   70 CONTINUE
      GO TO 150
   80 CONTINUE
C
C     AXISYMMETRIC GEOMETRY
C
      GO TO (90, 120, 90, 120, 90, 120), KIND
   90 CONTINUE
C
C     SUBPARAMETRIC ELEMENTS
C
      DO 110 I=1,NPSI
      I1=I
      I2=I+1
      I3=I+NPSI
      IF (I.EQ.NPSI) I2=1
      XDIFF=(X(I2)-X(I1))/2.
      YDIFF=(Y(I2)-Y(I1))/2.
      DO 100 LL=1,3
      DSX(LL)=0.
      DSY(LL)=0.
      DO 100 L=1,NGAUSS
      S=GSPT3(L)
      WW=GSWT3(L)
      R=X(I1)*(1.-S)*.5+X(I2)*(1.+S)*.5
      AA=FS(LL,S)
      DSX(LL)=DSX(LL)+WW*R*AA
      DSY(LL)=DSY(LL)+WW*R*AA
  100 CONTINUE
      DELPSI(I)=(DSX(1)*U(I1)+DSX(2)*U(I3)+DSX(3)*U(I2))*YDIFF-(DSY(1)* 
     1V(I1)+DSY(2)*V(I3)+DSY(3)*V(I2))*XDIFF
  110 CONTINUE
      GO TO 150
  120 CONTINUE
C
C     ISOPARAMETRIC ELEMENTS
C
      DO 140 I=1,NPSI
      I1=I
      I2=I+1
      I3=I+NPSI
      IF (I.EQ.NPSI) I2=1
      DO 130 LL=1,3
      DSX(LL)=0.
      DSY(LL)=0.
      DO 130 L=1,NGAUSS
      S=GSPT3(L)
      WW=GSWT3(L)
      R=X(I1)*(S**2-S)*.5+X(I3)*(1.-S**2)+X(I2)*(S**2+S)*.5
      AA=FS(LL,S)
      B=(2.*S-1.)*Y(I1)*.5+(-2.*S)*Y(I3)+(2.*S+1.)*Y(I2)*.5
      C=(2.*S-1.)*X(I1)*.5+(-2.*S)*X(I3)+(2.*S+1.)*X(I2)*.5
      DSX(LL)=DSX(LL)+WW*R*AA*B
      DSY(LL)=DSY(LL)+WW*R*AA*C
  130 CONTINUE
      DELPSI(I)=DSX(1)*U(I1)+DSX(2)*U(I3)+DSX(3)*U(I2)-DSY(1)*V(I1)-    
     1DSY(2)*V(I3)-DSY(3)*V(I2)
  140 CONTINUE
  150 CONTINUE
C
C     ADJUST STREAM FUNCTION INCREMENTS TO SATISFY ELEMENT MASS BALANCE
C
      S=0.
      DO 160 I=1,NPSI
      S=S+DELPSI(I)
  160 CONTINUE
      IF (ABS(S).GT.RESID) THEN
      RESID=ABS(S)
      NELR=N
      END IF
      S=S/NPSI
      DO 170 I=1,NPSI
      DELPSI(I)=DELPSI(I)-S
  170 CONTINUE
C
C     CALCULATE THE STREAM FUNCTION AT THE NODAL POINTS
C
C     FIRST ELEMENT IN THE MESH
C
      IF (N.NE.1) GO TO 200
      PSI(1)=PSIBAS
      DO 180 I=1,NPSIM
      PSI(I+1)=PSI(I)+DELPSI(I)
  180 CONTINUE
      DO 190 I=1,NPSI
      INODE=ICON(N,I)
      PSIVEC(INODE)=PSIVEC(INODE)+PSI(I)
      LISTND(INODE)=LISTND(INODE)+1
  190 CONTINUE
      GO TO 310
  200 CONTINUE
C
C     LOCATE CONNECTING NODE WITH KNOWN VALUE OF PSI
C
      NPRVEL=N-1
      DO 220 NP=1,NPSI
      KNODE=ICON(N,NP)
      NSTART=NP
      DO 220 NEL=1,NPRVEL
      KEL=NPRVEL-NEL+1
      NN=ABS(LISTEL(KEL))
      KIND2=MOD(NN,100)
      NN=NNCOR(KIND2)
      DO 210 I=1,NN
      INODE=ICON(KEL,I)
      IF (INODE.EQ.KNODE.AND.LISTND(INODE).GT.0) GO TO 230
  210 CONTINUE
  220 CONTINUE
      GO TO 300
  230 CONTINUE
C
C     CONNECTING NODE LOCATED, CALCULATE STREAM FUNCTION FOR
C     CURRENT ELEMENT
C
      PSI(NSTART)=PSIVEC(INODE)/LISTND(INODE)
      GO TO (240, 240, 260, 260, 260, 260) , KIND
  240 CONTINUE
      DO 250 I=1,NPSIM
      II=NSIDET(NSTART+I-1)
      III=NSIDET(NSTART+I)
      PSI(III)=PSI(II)+DELPSI(II)
  250 CONTINUE
      GO TO 280
  260 CONTINUE
      DO 270 I=1,NPSIM
      II=NSIDEQ(NSTART+I-1)
      III=NSIDEQ(NSTART+I)
      PSI(III)=PSI(II)+DELPSI(II)
  270 CONTINUE
C
C    ADD TO GLOBAL PSI VECTOR
C
  280 CONTINUE
      DO 290 I=1,NPSI
      INODE=ICON(N,I)
      PSIVEC(INODE)=PSIVEC(INODE)+PSI(I)
      LISTND(INODE)=LISTND(INODE)+1
  290 CONTINUE
      GO TO 310
  300 CONTINUE
      KOUNT=KOUNT+1
  310 CONTINUE
      IF (KOUNT.GE.1.AND.KINC.EQ.1) WRITE (NOUT, 400)
C
C     PROCESS GLOBAL VECTOR TO RECOVER AVERAGE PSI AT THE NODES
C
      DO 320 I=1,NUMNOD
      NPSI=LISTND(I)
      IF (NPSI.EQ.0) GO TO 320
      PSIVEC(I)=PSIVEC(I)/NPSI
  320 CONTINUE
C
C     GENERATE STREAM FUNCTION VALUES AT MIDSIDE NODES
C
      CALL MIDSID (PSIVEC,ICON,LISTEL)
C
C     FIND MAX AND MIN VALUES FOR STREAM FUNCTION (USES ONLY CORNER
C     NODE VALUES)
C
      IF (PRNTR.EQ.'SUMMARY') THEN
      CALL MAXMIN (LISTEL,ICON,7,PSIVEC(1),1,PSIMAX,PSIMIN,NELMX,       
     1NODMX,NELMN,NODMN)
      WRITE (NOUT, 440) TIME,PSIMAX,NELMX,NODMX,PSIMIN,NELMN,NODMN
      WRITE (NOUT, 450) RESID,NELR
      END IF
C
C     WRITE TAPE FOR USE IN PLOTTING AND PRINT STREAM FUNCTION FIELD
C
      NPSIM=1
      WRITE (NTP5) TIME,NUMNOD,NPSIM,(PSIVEC(I),I=1,NUMNOD)
      IF (PRNTR.EQ.'PRINT') THEN
      DO 340 N=1,NUMEL
      NN=ABS(LISTEL(N))
      KIND=MOD(NN,100)
      NN=NNCOR(KIND)
      DO 330 I=1,NN
      INODE=ICON(N,I)
      PSI(I)=PSIVEC(INODE)
  330 CONTINUE
      WRITE (NOUT, 410) N,(PSI(I),I=1,NN)
  340 CONTINUE
      END IF
C
      IF (KINC.EQ.NINC) GO TO 360
      GO TO 10
  350 CONTINUE
      KINC=KINC-1
      WRITE (NOUT, 460) KINC
  360 CONTINUE
C
  370 FORMAT (//,3X,'PRINTING OF THE ENTIRE STREAM FUNCTION FIELD HAS BE
     1EN REQUESTED',/,3X,'VALUES OF THE STREAM FUNCTION ARE CALCULATED A
     2T THE CORNER NODES-' ,/,3X,'ORDERING IS COUNTERCLOCKWISE AROUND TH
     3E ELEMENT BEGINNING WITH THE IDENTIFYING NODE' )
  380 FORMAT (//,3X,'PRINTING OF THE STREAM FUNCTION SUMMARY DATA HAS BE
     1EN REQUESTED' )
  390 FORMAT (//,3X,'PRINTING OF THE STEAM FUNCTION SUMMARY DATA HAS BEE
     1N SUPPRESSED' )
  400 FORMAT (//,3X,'*** ELEMENT CONNECTIVITY (ORDERING) NOT SUFFICIENTL
     1Y CONTINUOUS ',/,3X,'*** TO ALLOW CALCULATION OF THE STREAM FUNCTI
     2ON IN ALL THE ELEMENTS'  )
  410 FORMAT (10X,'ELEMENT'I5,2X,'PSI='4(3X,E15.7))
  420 FORMAT (///,3X,'CALCULATION OF THE STREAM FUNCTION HAS BEEN REQUES
     1TED FOR THIS PROBLEM' )
  430 FORMAT (/,3X,'STREAM FUNCTION VALUE AT FIRST NODE = ',E15.7,/,3X, 
     1'NUMBER OF TIME PLANES TO BE COMPUTED = ',I5)
  440 FORMAT (///,10X,'TIME='E15.7,/,10X,'MAXIMUM AND MINIMUM VALUES OF 
     1THE STREAM FUNCTION--' ,/,10X,'MAX PSI='E15.7,3X,'IN ELEMENT ',I4,
     2' NODE',I4,/,10X,'MIN PSI='E15.7,3X,'IN ELEMENT ',I4,' NODE',I4)
  450 FORMAT (/,10X,'MAXIMUM ELEMENT MASS BALANCE ERROR = ' ,E15.7,3X,  
     1'IN  ELEMENT ',I4,//)
  460 FORMAT (//,10X,'STREAM FUNCTION COMPUTED FOR',I5,' TIME STEPS')
      END
