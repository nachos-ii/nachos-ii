C
C***********************************************************************
C                                                                      *
C            NACHOS II - A Finite Element Computer Program             *
C                        for Incompressible Flow Problems              *
C                                                                      *
C     Copyright (c) 1986,2019   National Technology & Engineering      *
C                               Solutions of Sandia, LLC (NTESS)       *
C                                                                      *
C                            All rights reserved.                      *
C                                                                      *
C     This software is distributed under the BSD 3-Clause License.     *
C                                                                      *
C***********************************************************************
C
      SUBROUTINE GENRD3 (X,Y,ICON,LISTEL,LISTND,MAP,IDNPS,NNNPS,IPTNPS, 
     1LSTNPS,FACNPS,BCVNPS,IDESS,NEESS,NNESS,IPEESS,IPNESS,LTEESS,      
     2LTNESS,FACESS,BCVESS)
C
C     ******************************************************************
C
C     SUBROUTINE TO COMBINE ELEMENT AND BOUNDARY CONDITION DATA FROM THE
C     'GENESIS' AND INPUT FILES
C     'GENESIS' DATA IS REWRITTEN TO THE 'EXODUS' FILE
C
C     ******************************************************************
C
      CHARACTER*10 CDATA,CODES,BCCODE,TYPE
C
      COMMON /INDATR/ RDATA(150)
      COMMON /INDATI/ IDATA(150)
      COMMON /INDATC/ CDATA(150)
      COMMON /TAPES/  NIN,NOUT,NTP0,NTP1,NTP2,NTP3,NTP4,NTP5,NTP6,NTP7, 
     1                NTP8,NTP9,NTP10,NTP11,NTP12,NTP13
      COMMON /CONTRL/ IEDIT,IPRINT
      COMMON /SZDAT/  NUMEL,NUMNOD,NUMVAR,NUMDOF,NODSOL
      COMMON /LMTDAT/ MAXELM,MAXNOD,MAXBC,MAXEDG,MACMAT,MAXNPT,MAXPLT,  
     1                MAXBRY,MAXBLK
      COMMON /GENDAT/ NELBLK,NUMNPS,LNPSNL,NUMESS,LESSEL,LESSNL,MXEBLK, 
     1                IBLK(100)
      COMMON /MATDAT/ NMAT,NPROP,PROP(15,10),NXMAT,NXPROP,XPROP(15,10)
      COMMON /PRBDAT/ IAXSYM,ITMDEP,IFORCE,IFREE,IVAR1,IVAR2,IPFUNC,    
     1                IPNLTY,PNLTY
      COMMON /BCDAT/  BCSET(2,20,2),IPELM,IPNODE,PBC
      COMMON /ELMDAT/ NNELM(6),NNCOR(6),NNMID(6),NNCTR(6),NSIDET(5),    
     1                NSIDEQ(7),NNSIDE(6,4,3)
C
      DIMENSION X(*), Y(*), ICON(NUMEL,*), LISTEL(*), LISTND(*), MAP(*)
      DIMENSION IDNPS(*), NNNPS(*), IPTNPS(*), LSTNPS(*), FACNPS(*)
      DIMENSION IDESS(*), NEESS(*), NNESS(*), IPEESS(*), IPNESS(*)
      DIMENSION LTEESS(*), LTNESS(*), FACESS(*)
      DIMENSION BCVNPS(*), BCVESS(*)
      DIMENSION XX(9), YY(9), ICONEL(9), CODES(9), BCCODE(30)
      DIMENSION NBC(30), IBC(30), BCVAL(30), TYPE(30)
C
      DATA (CODES(I),I=1,9)/'TRI6/3','TRI6/6','QUAD8/4','QUAD8/8',      
     1     'QUAD9/4','QUAD9/9','BC','SET','END'/
      DATA (BCCODE(I),I=1,30)/'U','V','P','T','V1','V2','STICK','USIDE',
     1     'VSIDE','TSIDE','V1SIDE','V2SIDE','UVARY','VVARY','TVARY',   
     2     'V1VARY','V2VARY','TNRMLSIDE','QSIDE','FLUX1SIDE',           
     3     'FLUX2SIDE','TNRMLVARY','QVARY','FLUX1VARY','FLUX2VARY',     
     4     'QCONV','QRAD','TSHRSIDE','TSHRVARY','SLIP'/
      DATA DUMWRT/0./
C
C     ******************************************************************
C
C     READ AND STORE NODAL POINT BOUNDARY CONDITION DATA FROM GENESIS
C
      READ (NTP0) (IDNPS(I),I=1,NUMNPS)
      READ (NTP0) (NNNPS(I),I=1,NUMNPS)
      READ (NTP0) (IPTNPS(I),I=1,NUMNPS)
C
      IF (NUMNPS.GT.0) THEN
      WRITE (NTP12) (IDNPS(I),I=1,NUMNPS)
      WRITE (NTP12) (NNNPS(I),I=1,NUMNPS)
      WRITE (NTP12) (IPTNPS(I),I=1,NUMNPS)
       ELSE
      WRITE (NTP12) DUMWRT
      WRITE (NTP12) DUMWRT
      WRITE (NTP12) DUMWRT
      END IF
C
      DO 10 I=1,NUMNPS
      IDNPS(I)=-IDNPS(I)
   10 CONTINUE
C
      READ (NTP0) (LSTNPS(I),I=1,LNPSNL)
      READ (NTP0) (FACNPS(I),I=1,LNPSNL)
C
      IF (NUMNPS.GT.0) THEN
      WRITE (NTP12) (LSTNPS(I),I=1,LNPSNL)
      WRITE (NTP12) (FACNPS(I),I=1,LNPSNL)
       ELSE
      WRITE (NTP12) DUMWRT
      WRITE (NTP12) DUMWRT
      END IF
C
C     READ AND STORE ELEMENT SIDE BOUNDARY CONDITION DATA FROM GENESIS
C
      READ (NTP0) (IDESS(I),I=1,NUMESS)
      READ (NTP0) (NEESS(I),I=1,NUMESS)
      READ (NTP0) (NNESS(I),I=1,NUMESS)
      READ (NTP0) (IPEESS(I),I=1,NUMESS)
      READ (NTP0) (IPNESS(I),I=1,NUMESS)
C
      IF (NUMESS.GT.0) THEN
      WRITE (NTP12) (IDESS(I),I=1,NUMESS)
      WRITE (NTP12) (NEESS(I),I=1,NUMESS)
      WRITE (NTP12) (NNESS(I),I=1,NUMESS)
      WRITE (NTP12) (IPEESS(I),I=1,NUMESS)
      WRITE (NTP12) (IPNESS(I),I=1,NUMESS)
       ELSE
      WRITE (NTP12) DUMWRT
      WRITE (NTP12) DUMWRT
      WRITE (NTP12) DUMWRT
      WRITE (NTP12) DUMWRT
      WRITE (NTP12) DUMWRT
      END IF
C
      DO 20 I=1,NUMESS
      IDESS(I)=-IDESS(I)
   20 CONTINUE
C
      READ (NTP0) (LTEESS(I),I=1,LESSEL)
      READ (NTP0) (LTNESS(I),I=1,LESSNL)
      READ (NTP0) (FACESS(I),I=1,LESSNL)
C
      IF (NUMESS.GT.0) THEN
      WRITE (NTP12) (LTEESS(I),I=1,LESSEL)
      WRITE (NTP12) (LTNESS(I),I=1,LESSNL)
      WRITE (NTP12) (FACESS(I),I=1,LESSNL)
       ELSE
      WRITE (NTP12) DUMWRT
      WRITE (NTP12) DUMWRT
      WRITE (NTP12) DUMWRT
      END IF
C
C     READ AND STORE INPUT DATA
C
      IBCSET=0
   30 CONTINUE
      CALL RDFFLD (NIN,RDATA,IDATA,CDATA)
      INST=0
   40 CONTINUE
      INST=INST+1
      IF (CDATA(1).NE.CODES(INST).AND.INST.LE.8) GO TO 40
      IF (INST.EQ.9.AND.CDATA(1).NE.CODES(9)) CALL ERROR ('GENRD3','UNRE
     1COGNIZED ELEMENTS COMMAND',' ',0,' ',0,'WORD',CDATA(1),1)
      GO TO (50, 50, 50, 50, 50, 50, 70, 130, 140), INST
C
C     ELEMENT DATA
C
   50 CONTINUE
      KIND=INST
      MAT=IDATA(2)
      IDEBLK=IDATA(3)
      DO 60 I=1,NUMEL
      IF (LISTEL(I).EQ.-IDEBLK) LISTEL(I)=MAT*100+KIND
   60 CONTINUE
      GO TO 30
C
C     BOUNDARY CONDITION DATA
C
   70 CONTINUE
      DO 80 I=1,30
      IF (CDATA(2).EQ.BCCODE(I)) GO TO 90
   80 CONTINUE
      CALL ERROR ('GENRD3','UNRECOGNIZED BOUNDARY CONDITION',' ',0,' ', 
     10,'WORD',CDATA(2),1)
   90 CONTINUE
      IBCTYP=I
      ID=IDATA(3)
      VALUE=RDATA(4)
      IF (IBCTYP.GE.7) GO TO 110
C
C     NODAL POINT CONDITIONS
C
      DO 100 I=1,NUMNPS
      IF (IDNPS(I).EQ.-ID) THEN
      IDNPS(I)=IBCTYP
      BCVNPS(I)=VALUE
      END IF
  100 CONTINUE
      GO TO 30
C
C     ELEMENT SIDE CONDITIONS
C
  110 CONTINUE
      DO 120 I=1,NUMESS
      IF (IDESS(I).EQ.-ID) THEN
      IDESS(I)=IBCTYP
      BCVESS(I)=VALUE
      END IF
  120 CONTINUE
      GO TO 30
C
C     BOUNDARY SET CONDITIONS
C
  130 CONTINUE
      LL=0
      IF (CDATA(2).EQ.BCCODE(26)) LL=1
      IF (CDATA(2).EQ.BCCODE(27)) LL=2
      IF (LL.EQ.0) CALL ERROR ('GENRD3','UNRECOGNIZED DATA ON SET CARD',
     1' ',0,' ',0,'WORD',CDATA(2),1)
      N=IDATA(3)
      IF (CDATA(4).EQ.'VARIABLE  ') RDATA(4)=1.0E25
      BCSET(LL,N,1)=RDATA(4)
      BCSET(LL,N,2)=RDATA(5)
      IBCSET=IBCSET+1
      GO TO 30
C
  140 CONTINUE
C
C     CHECK INPUT DATA FOR ERRORS
C
      DO 150 I=1,NUMEL
      IF (LISTEL(I).LT.0) THEN
      IDEBLK=ABS(LISTEL(I))
      CALL ERROR ('GENRD3','MISSING ELEMENT DATA','ELEMENT BLOCK',      
     1IDEBLK,'ELEMENT NO.',I,' ',' ',1)
      END IF
  150 CONTINUE
      DO 160 I=1,NUMNPS
      IF (IDNPS(I).LT.0) THEN
      ID=ABS(IDNPS(I))
      CALL ERROR ('GENRD3','MISSING BOUNDARY CONDITION DATA','NODE POINT
     1 DATA SET',ID,' ',0,' ',' ',0)
      END IF
  160 CONTINUE
      DO 170 I=1,NUMESS
      IF (IDESS(I).LT.0) THEN
      ID=ABS(IDESS(I))
      CALL ERROR ('GENRD3','MISSING BOUNDARY CONDITION DATA','ELEMENT SI
     1DE DATA SET',ID,' ',0,' ',' ',0)
      END IF
  170 CONTINUE
C
C     OBTAIN ORIGINAL MAPPING VECTOR FROM GENESIS FILE
C
      REWIND (NTP0)
      READ (NTP0)
      READ (NTP0)
      READ (NTP0)
      READ (NTP0) (MAP(I),I=1,NUMEL)
      REWIND (NTP0)
C
C     LOOP ON ELEMENTS, DECODE ELEMENT DATA
C
      IF (IPRINT.GE.2) WRITE (NOUT, 410)
      LINE=0
      MAXLN1=45
      MAXLN2=55
C
      DO 180 I=1,NUMNOD
      LISTND(I)=0
  180 CONTINUE
C
      DO 310 N=1,NUMEL
      KUREL=N
      NN=ABS(LISTEL(KUREL))
      KIND=MOD(NN,100)
      MAT=NN/100
      NN=NNELM(KIND)
C
      DO 190 I=1,NN
      INODE=ICON(KUREL,I)
      XX(I)=X(INODE)
      YY(I)=Y(INODE)
      ICONEL(I)=INODE
  190 CONTINUE
C
      IF (PROP(15,MAT).EQ.3.0) GO TO 210
      DO 200 I=1,NN
      INODE=ICON(KUREL,I)
      LISTND(INODE)=LISTND(INODE)+1
  200 CONTINUE
  210 CONTINUE
C
C     ALTER CONNECTIVITY FOR LINEAR PRESSURE CASE
C
      IF (IPFUNC.EQ.1) ICON(KUREL,NN+1)=NUMNOD+KUREL
C
C     DECODE BOUNDARY CONDITION DATA
C
      NUMBC=0
C
C     NODAL POINT DATA
C
      IF (NUMNPS.EQ.0) GO TO 250
      DO 240 I=1,NN
      INODE=ICON(KUREL,I)
      DO 230 NPS=1,NUMNPS
      IF (IDNPS(NPS).LT.0) GO TO 230
      NEL=NNNPS(NPS)
      IPT1=IPTNPS(NPS)
      DO 220 KNEL=1,NEL
      IPT=IPT1+KNEL-1
      JNODE=LSTNPS(IPT)
      IF (INODE.EQ.JNODE) THEN
      NUMBC=NUMBC+1
      NBC(NUMBC)=I
      IBC(NUMBC)=IDNPS(NPS)
      BCVAL(NUMBC)=BCVNPS(NPS)
      END IF
  220 CONTINUE
  230 CONTINUE
  240 CONTINUE
C
C     ELEMENT SIDE DATA
C
  250 CONTINUE
      IF (NUMESS.EQ.0) GO TO 290
      NSIDES=NNCOR(KIND)
      IDELND=1+(NNMID(KIND)/NSIDES)*2
      INC=1+(NNMID(KIND)/NSIDES)
      DO 280 I=1,NUMESS
      IF (IDESS(I).LT.0) GO TO 280
      NELSS=NEESS(I)
      IPTEL=IPEESS(I)
      IPTND=IPNESS(I)
      DO 270 J=1,NELSS,INC
      IPTE=IPTEL+(J-1)
      IPTN=IPTND+(IDELND+1)*((J-1)/INC)
      JEL=LTEESS(IPTE)
      IF (JEL.EQ.MAP(KUREL)) THEN
      J1=LTNESS(IPTN)
      J3=LTNESS(IPTN+IDELND)
      JSIDE=J1*100000+J3
      DO 260 NS=1,NSIDES
      II1=NNSIDE(KIND,NS,1)
      II3=NNSIDE(KIND,NS,3)
      I1=ICON(KUREL,II1)
      I3=ICON(KUREL,II3)
      ISIDE=I1*100000+I3
      IF (ISIDE.EQ.JSIDE) THEN
      NUMBC=NUMBC+1
      NBC(NUMBC)=NS
      IBC(NUMBC)=IDESS(I)
      BCVAL(NUMBC)=BCVESS(I)
      END IF
  260 CONTINUE
      END IF
  270 CONTINUE
  280 CONTINUE
  290 CONTINUE
C
C     WRITE ELEMENT DATA ON NTAPE2
C
      WRITE (NTP2) KIND,MAT,NN,(XX(I),I=1,NN),(YY(I),I=1,NN),(ICONEL(I),
     1I=1,NN),NUMBC,(NBC(I),IBC(I),BCVAL(I),I=1,NUMBC)
C
C     PRINT ELEMENT DATA
C
      IF (IPRINT.LE.2) GO TO 300
      LINE=LINE+4
      IF (LINE.GE.MAXLN1) LINE=4
      IF (KUREL.EQ.1) THEN
      LINE=LINE+4
      WRITE (NOUT, 420)
      END IF
      IF (LINE.EQ.4.AND.IPRINT.GE.2) WRITE (NOUT, 430)
      NL=12-NN
      NNL=6
      IF (NL.GE.6) NNL=NN
      WRITE (NOUT, 440) CODES(KIND),MAT,(ICONEL(I),I=1,NNL)
      WRITE (NOUT, 450) KUREL,(XX(I),YY(I),I=1,NNL)
      IF (NL.GE.6) GO TO 300
      WRITE (NOUT, 460) (ICONEL(I),I=7,NN)
      WRITE (NOUT, 470) (XX(I),YY(I),I=7,NN)
  300 CONTINUE
  310 CONTINUE
C
C     PRINT BOUNDARY CONDITIONS
C
      IF (IPRINT.GE.2) WRITE (NOUT, 410)
      IF (IPRINT.EQ.1) GO TO 370
      LINE=6
      REWIND (NTP2)
C
      DO 330 N=1,NUMEL
      READ (NTP2) KIND,MAT,NN,(XX(I),I=1,NN),(YY(I),I=1,NN),            
     1(ICONEL(I),I=1,NN),NUMBC,(NBC(I),IBC(I),BCVAL(I),I=1,NUMBC)
      IF (NUMBC.EQ.0) GO TO 330
      NN=NUMBC
      DO 320 I=1,NUMBC
      II=IBC(I)
      TYPE(I)=BCCODE(II)
  320 CONTINUE
      LINE=LINE+NN+1
      IF (LINE.GE.MAXLN2) LINE=NN+7
      IF (LINE.LE.NN+7) WRITE (NOUT, 480)
      WRITE (NOUT, 490) N,(TYPE(K),NBC(K),BCVAL(K),K=1,NUMBC)
  330 CONTINUE
      IF (IBCSET.EQ.0) GO TO 370
      WRITE (NOUT, 500)
      DO 360 KK=1,2
      DO 350 K=1,10
      IF (BCSET(KK,K,1).LT.0.) GO TO 360
      IF (BCSET(KK,K,1).GT.1.0E24) GO TO 340
      WRITE (NOUT, 510) KK,K,BCSET(KK,K,1),BCSET(KK,K,2)
      GO TO 350
  340 CONTINUE
      WRITE (NOUT, 520) KK,K,'VARIABLE',BCSET(KK,K,2)
  350 CONTINUE
  360 CONTINUE
  370 CONTINUE
C
C     RECORD ELEMENT BLOCK DATA FOR USE IN 'GENESIS' FILE
C
      IF (NELBLK.GT.MAXBLK) CALL ERROR ('GENRD3','MAXIMUM NUMBER OF ELEM
     1ENT BLOCKS EXCEEDED','MAX BLOCKS',MAXBLK,'NUMBER OF BLOCKS',      
     2NELBLK,'INCREASE MAXBLK','AND IBLK(MAXBLK)',1)
      NBLK=1
      IBLK(1)=LISTEL(1)
      DO 400 N=1,NUMEL
      ITEST=LISTEL(N)
      NB=NBLK
      DO 380 I=1,NB
      IF (ITEST.EQ.IBLK(I)) GO TO 390
  380 CONTINUE
      NBLK=NBLK+1
      IBLK(NBLK)=ITEST
  390 CONTINUE
  400 CONTINUE
      IF (NBLK.NE.NELBLK) CALL ERROR ('GENRD3','MISMATCH IN GENESIS AND 
     1NACHOS ELEMENT BLOCK COUNT','GENESIS BLOCKS',NELBLK,'NACHOS BLOCKS
     2',NBLH,'BLOCK COUNT SET TO','NACHOS VALUE',0)
      NELBLK=NBLK
C
      RETURN
C
  410 FORMAT (/////,2X,'************************************************
     1******************************************************************
     2****************'   ,//)
  420 FORMAT ('1',/,53X,'--ELEMENT COORDINATE DATA--' ,///,' ELEMENT   M
     1ATR',8X,'NODE 1',14X,'NODE 2',14X,'NODE 3',14X,'NODE 4',14X,      
     2'NODE 5',14X,'NODE 6',/,' TYPE      TYPE' ,5X,'N/X',6X,' /Y',8X,  
     3'N/X',6X,' /Y',8X,'N/X',6X,' /Y',8X,'N/X',6X,' /Y',8X,'N/X',6X,   
     4' /Y',8X,'N/X',6X,' /Y',/,'   NUM   ',14X,'NODE 7',14X,'NODE 8',  
     514X,'NODE 9',14X,'NODE 10',13X,'NODE 11',13X,'NODE 12',/,20X,     
     6'N/X',6X,' /Y',8X,'N/X',6X,' /Y',8X,'N/X',6X,' /Y',8X,'N/X',6X,   
     7' /Y',8X,'N/X',6X,' /Y',8X,'N/X',6X,' /Y'/)
  430 FORMAT ('1ELEMENT   MATR' ,8X,'NODE 1',14X,'NODE 2',14X,'NODE 3', 
     114X,'NODE 4',14X,'NODE 5',14X,'NODE 6',/,' TYPE      TYPE' ,5X,'N/
     2X',6X,' /Y',8X,'N/X',6X,' /Y',8X,'N/X',6X,' /Y',8X,'N/X',6X,' /Y',
     38X,'N/X',6X,' /Y',8X,'N/X',6X,' /Y',/,'   NUM   ',14X,'NODE 7',   
     414X,'NODE 8',14X,'NODE 9',14X,'NODE 10',13X,'NODE 11',13X,        
     5'NODE 12',/,20X,'N/X',6X,' /Y',8X,'N/X',6X,' /Y',8X,'N/X',6X,     
     6' /Y',8X,'N/X',6X,' /Y',8X,'N/X',6X,' /Y',8X,'N/X',6X,' /Y'/)
  440 FORMAT (/,1X,A8,1X,I4,I9,9X,5(I11,9X))
  450 FORMAT (1X,I5,9X,F9.3,F9.3,5(F11.3,F9.3))
  460 FORMAT (14X,I9,9X,5(I11,9X))
  470 FORMAT (15X,F9.3,F9.3,5(F11.3,F9.3))
  480 FORMAT ('1',///,3X,'BOUNDARY  CONDITIONS' ///10X,'ELEMENT',4X,'TYP
     1E',5X,'NODE/',5X,'VALUE/',/,10X,'NUMBER',15X,'SIDE'6X,'SET NO.'//)
  490 FORMAT (10X,I6,3X,A10,I4,4X,E12.4/14(19X,A10,I4,4X,E12.4/))
  500 FORMAT (///,10X,'QCONV=1,QRAD=2' ,7X,'SET NO.',8X,'--H--',8X,'--TB
     1ULK--')
  510 FORMAT (//,13X,I5,11X,I5,6X,2E15.7)
  520 FORMAT (//,13X,I5,11X,I5,13X,A,E15.7)
      END
